<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sunshine.mapper.GoodsMapper">

<sql id="baseColumn">
    goods_num,goods_name,goods_price,goods_amount,goods_categori,
    goods_content,goods_image
 
</sql>

<resultMap type="sunshine.model.DTO.GoodsDTO" id="baseResultMap">
   <id column="goods_num" jdbcType="VARCHAR" property="goodsNum"/>
   <result column="goods_Name" jdbcType="VARCHAR" property="goodsName"/>
   <result column="goods_Price" jdbcType="VARCHAR" property="goodsPrice"/>
   <result column="goods_Amount" jdbcType="VARCHAR" property="goodsAmount"/>
   <result column="goods_Categori" jdbcType="VARCHAR" property="goodsCategori"/>
   <result column="goods_Content" jdbcType="VARCHAR" property="goodsContent"/>
   <result column="goods_Image" jdbcType="VARCHAR" property="goodsImage"/>

</resultMap>
<insert id="goodsInsert" parameterType="sunshine.model.DTO.GoodsDTO">
   insert into shop_goods(<include refid="baseColumn"/>)
   values(goods_seq.nextval,#{goodsName}, #{goodsPrice}, #{goodsAmount},
    #{goodsCategori}, #{goodsContent}, #{goodsImage})

</insert>

<select id="getGoodsList" parameterType="sunshine.model.DTO.GoodsDTO"
    resultMap="baseResultMap">
    
    select <include refid="baseColumn"/>
    from (select rownum rn, <include refid="baseColumn" />
         from(select <include refid="baseColumn" />
         from shop_goods
         <where>
             <if test="goodsNum != null">
                   goods_num = #{goodsNum}
             </if>
         </where>
         order by goods_num)
    )
    <if test="startEndPageDTO != null">
    where rn between #{startEndPageDTO.startPage}
         and #{startEndPageDTO.endPage}
    </if>
    
    </select>

    <select id="getGoodsCount" resultType="int">
           select count(*) from shop_goods
    </select>
    
    <delete id="goodsDelete" parameterType="string" >
    delete from shop_goods
    where goods_num = #{goodsNum}
    </delete>
    
    <update  id="goodsUpdate" parameterType="sunshine.model.DTO.GoodsDTO">
       update shop_goods
       set goods_name = #{goodsName},
       goods_price = #{goodsPrice},
       goods_amount = #{goodsAmount},
       goods_categori = #{goodsCategori},
       goods_content = #{goodsContent},
       goods_image = #{goodsImage}
       where goods_num = #{goodsNum}
    
    </update>
    
    <select id ="mOrderNum" resultType="string" >
    	select shop_payment_seq.nextval from dual    
    </select>
    
    <insert id="paymentInsert"  parameterType="sunshine.model.DTO.MemOrderDTO">
    insert into shop_member_order(
    m_order_num,m_order_date, goods_num, goods_total_price, mem_no, mem_name,
    mem_id, mem_phone, mem_email,mem_addr)
    values(
    #{mOrderNum}, sysdate,  #{goodsNum}, #{goodsTotalPrice},  #{memNo}, #{memName}, 
    #{memId}, #{memPhone}, #{memEmail}, #{memAddr} )
    </insert>
    
    <insert id="paymentInsertPro" parameterType="sunshine.model.DTO.MemOrderDTO">
    insert into shop_payment(
    pay_num, m_order_num, delivery_address, pay_division)
    values(
    shop_payment_seq.nextval,#{mOrderNum}, #{deliveryAddress}, 
    #{payDivision})
    
    </insert>
    
    <select id ="getPaymentList" parameterType="sunshine.model.DTO.GoodsDTO"
    resultType="sunshine.model.DTO.GoodsDTO">
    select *
    from shop_payment
    where 
    
    </select>
    
</mapper>